name: 测试

on:
  repository_dispatch:
    types: 测试
#  watch:
#    types: started
#  schedule:
#    - cron: 0 0 * * *
      
env:
  FILE_NAME: 测试      

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Build firmware
      id: build
      run: |
        cd /opt
        sudo wget http://256pd.top:9666/mk_openwrt_src_20201008.tar.gz
        sudo tar xvzf mk_openwrt_src_20201008.tar.gz
        cd /opt
        sudo mkdir imgs
        wget -O /opt/imgs/Armbian_20.09_Aml-s9xxx_buster_5.4.69-flippy-45+o.img http://256pd.top:9666/Armbian_20.09_Aml-s9xxx_buster_5.4.69-flippy-45+o.img
        cd /opt/openwrt
        sudo wget http://256pd.top:9666/openwrt-armvirt-64-default-rootfs.tar.gz
        sudo ./mk_s905x3_opimg.sh
        sudo ./mk_n1_opimg.sh
        sudo ./mk_beikeyun_opimg.sh
        sudo ./mk_l1pro_opimg.sh
        sudo ./n1-to-vplus.sh
        cd /opt/openwrt/tmp
        bzip2 *.img
        echo "::set-output name=FIRMWARE::$PWD"
        
    - name: Upload bin directory
      uses: actions/upload-artifact@main
      with:
        name: img
        path: ${{ steps.build.outputs.FIRMWARE }}
        
        
    - name: WeChat notification
      run: curl https://sc.ftqq.com/${{ secrets.ServerChan }}.send?text=${{ env.FILE_NAME }}发布成功
